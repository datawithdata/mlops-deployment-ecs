name: Deploy ECS Automation

on:
  push:
    branches: 
      - dev
      - qa
      - prod

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - uses: aws-actions/setup-sam@v2


      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
            role-to-assume: arn:aws:iam::270932919550:role/git-actions-iam 
            aws-region: us-east-1

      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch
      
      - name: Read parameters from JSON file
        id: read_params
        run: |
          echo ::set-output name=params::$(cat ${{ steps.extract_branch.outputs.branch }}.json | jq -r '. | to_entries | map("\(.key)=\(.value|tostring)") | .[]')


      - run: sam build --use-container

      - run: sam deploy --stack-name ecs-automation --parameter-overrides ${{ steps.read_params.outputs.params }} --s3-bucket siri-git-actions --capabilities CAPABILITY_NAMED_IAM --no-confirm-changeset --no-fail-on-empty-changeset 

      - name: Get CloudFormation Outputs
        id: cfn_outputs
        run: |
          output_value=$(aws cloudformation describe-stacks --stack-name ecs-automation --query "Stacks[0].Outputs[?OutputKey=='BucketNameOutput'].OutputValue" --output text)
          echo "::set-env name=CFN_OUTPUT_VALUE::$output_value"
        
      - name: Download python code
        run: |
          aws s3 cp functions/dynamodb-git-update/dynamodb-git-update.py s3://$CFN_OUTPUT_VALUE/dynamodb-git-update.py 
          aws s3 cp functions/download-s3/download-s3.py s3://$CFN_OUTPUT_VALUE/download-s3.py functions/download-s3/download-s3.py